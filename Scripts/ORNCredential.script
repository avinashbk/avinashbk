(* This script will contain shared handlers for referencing credentials within Cerner Vault  *)	

(** Public **)

(**
	Handler: 
		ORNCredential.retrieveCredential(credentialID)
	Description: 
		Retreieves username and password from Cerner Vault using the credential ID.
	Parameters:
		 credentialID - Text, the unique identifier for a credential in Cerner Vault.
	Returns: 
		JSONValue, the username and password for the given credential.
**)
to retrieveCredential credentialID
	if credentialID is empty
		throw (reason: "ORNCredential.retrieveCredential called without credentialID")
	end if
	
	set resourceURL to "/credentials/" & credentialID
	set response to ORNHTTP.get(resourceURL)
	set credential to JSONValue(response.responseBody)
	Remove property id from credential	
	Log "Retrieved credential for:" && credential.username
	return credential
end retrieveCredential

(**
	Handler: 
		ORNCredential.retrieveEncodedCredential (credentialID)
	Description: 
		Retrieves credential from Cerner Vault using.  Encodes the password
	Parameters:
		 credentialID - Text, the unique identifier for a credential in Cerner Vault.
	Returns: 
		JSONValue, the username and password for the given credential.
**)
to retrieveEncodedCredential credentialID
	set credential to retrieveCredential(credentialID)
	set credential.password to EncodeText(credential.password)
	return credential
end retrieveEncodedCredential

(**
	Handler: 
		ORNCredential.typeEncodedPassword (encodedPassword, encodingKey)
	Description: 
		Type out the decoded password.
	Parameters:
		 encodedPassword - Text, encoded password 
		 encodingKey - (optional) Text, key used to encode the password
					Note - password needs to be encoded and decoded using the same suite if not passing encoding key
	Returns: 
		n/a
**)
to typeEncodedPassword (encodedPassword, encodingKey)	
	if endcodedPassword is empty
		throw (reason: "ORNVault.typeEncodedPassword called without encoded password value")
	end if
	if encodingKey is empty
		TypeEncodedText encodedPassword
	else
		TypeEncodedText encodedPassword, encodingKey
	end if
end typeEncodedPassword
